datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

//
// =============== AUTH MODELS (NextAuth.js compatible) ===============
//
model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  password      String?   // untuk login credentials
  role          String    @default("user") // "user" | "admin"
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  uploads       FileUpload[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

//
// =============== APP MODELS ===============
//
model FileUpload {
  id          Int      @id @default(autoincrement())
  nama        String
  size        String?
  url         String
  uploader    String
  status      String   @default("Menunggu")
  catatan     String?
  commentLink String?
  skpd        String?
  createdAt   DateTime @default(now())

  userId   String?
  user     User?      @relation(fields: [userId], references: [id])
}

model Skpd {
  id        Int       @id @default(autoincrement())
  nama      String
  alamat    String?
  createdAt DateTime  @default(now())

  pegawai   Pegawai[]
  anggaran  Anggaran[]
}

model Pegawai {
  id        Int      @id @default(autoincrement())
  nama      String
  jabatan   String
  skpdId    Int
  createdAt DateTime @default(now())

  skpd      Skpd     @relation(fields: [skpdId], references: [id])
}

model Anggaran {
  id          Int        @id @default(autoincrement())
  tahun       Int
  jumlah      Float
  skpdId      Int
  createdAt   DateTime   @default(now())

  skpd        Skpd       @relation(fields: [skpdId], references: [id])
  kegiatan    Kegiatan[]
}

model Kegiatan {
  id          Int      @id @default(autoincrement())
  nama        String
  deskripsi   String?
  anggaranId  Int
  createdAt   DateTime @default(now())

  anggaran    Anggaran @relation(fields: [anggaranId], references: [id])
}
